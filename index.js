const TelegramApi = require('node-telegram-bot-api');
require('dotenv').config();

const TOKEN = process.env.TELEGRAM_TOKEN || 'YOUR_TELEGRAM_BOT_TOKEN';

const bot = new TelegramApi(TOKEN, { polling: true });

const chats = {};

const start = async () => {
    await bot.setMyCommands([
        { command: '/start', description: '–ù–∞—á–∞–ª—å–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ.' },
        { command: '/info', description: '–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ.' },
        { command: '/game', description: '–ò–≥—Ä–∞ "–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ".' },
    ]);

    bot.on('message', async ({ chat: { id }, text, from: { first_name } }) => {
        switch (text) {
            case '/start': {
                await bot.sendSticker(id, 'https://tlgrm.ru/_/stickers/633/5c5/6335c5a3-81a4-3786-bb3c-701aa8335d38/2.webp')
                await bot.sendMessage(id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç (–∞–≤—Ç. r0mm4k).');
                break;
            }
            case '/info': {
                await bot.sendMessage(id, `–¢–µ–±—è –∑–æ–≤—É—Ç ${first_name}.`);
                break;
            }
            case '/game': {
                await bot.sendMessage(id, '–°–µ–π—á–∞—Å —è –∑–∞–≥–∞–¥–∞—é —Ü–∏—Ñ—Ä—É –æ—Ç 0 –¥–æ 9, –∞ —Ç—ã –¥–æ–ª–∂–µ–Ω –µ–µ —É–≥–∞–¥–∞—Ç—å.');

                chats[id] = Math.floor(Math.random() * 10);
                await bot.sendMessage(id, '–£–≥–∞–¥—ã–≤–∞–π... üòÅ');
                break;
            }
            default: {
                await bot.sendMessage(id, `–£–ø—Å!!! –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞...`);
                break;
            }
        }
    });
};

start();
